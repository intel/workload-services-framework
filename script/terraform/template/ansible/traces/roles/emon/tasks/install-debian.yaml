#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- block:

  - name: Install emon prerequisites
    apt:
      name: 
        - build-essential
        - pkg-config
        - bzip2
      update_cache: true
      state: present
    register: aptrc
    until: aptrc is success
    retries: 10
    delay: 10
  
  - name: Detect kernel version
    shell:
      cmd: uname -r
      executable: /bin/bash
    register: kernel_version
  
  - name: Check if kernel header is already installed
    stat:
      path: "/usr/src/kernels/{{ kernel_version.stdout }}"
    register: kernel_header
  
  - name: Install kernel header
    apt:
      name: 
        - "linux-headers-{{ kernel_version.stdout }}"
      state: present
    register: aptrc
    until: aptrc is success
    retries: 10
    delay: 10
    when: not kernel_header.stat.exists

  - block:
    - name: Get /proc/version
      shell: cat /proc/version
      register: proc_version_output

    - name: compile kernel gcc version
      set_fact:
        gcc_version: "{{ (proc_version_output.stdout | regex_search('x86_64-linux-gnu-gcc-(\\d+)', '\\1') | first ) }}"
      when: proc_version_output.stdout is search('x86_64-linux-gnu-gcc-\\d+')

    - name: compile kernel gcc version
      set_fact:
        gcc_version: "{{ proc_version_output.stdout | regex_search('gcc version (\\d+)(\\.\\d+\\.\\d+)', '\\1') | first }}"
      when: proc_version_output.stdout is search('gcc version (\\d+\\.\\d+\\.\\d+)')

    - name: compile kernel gcc version
      set_fact:
        gcc_version: "{{ proc_version_output.stdout | regex_search('gcc \\(Ubuntu .*?\\) (\\d+)(\\.\\d+\\.\\d+)', '\\1') | first }}"
      when: proc_version_output.stdout is search('gcc \\(Ubuntu .*?\\) (\\d+)(\\.\\d+\\.\\d+)')

    - block:
      - name: check compile gcc version is exist
        shell: "gcc-{{ gcc_version }} --version"
        register: gcc_version_check
        ignore_errors: yes
# 
# cat /proc/version
# Linux version 5.15.0-113-generic (buildd@lcy02-amd64-072) (gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0, GNU ld (GNU Binutils for Ubuntu) 2.38) #123-Ubuntu SMP Mon Jun 10 08:16:17 UTC 2024
# apt-cache madison gcc-11
# gcc-11 | 11.4.0-1ubuntu1~22.04 | http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages 
# gcc-11 | 11.4.0-1ubuntu1~22.04 | http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages
# gcc-11 | 11.2.0-19ubuntu1 | http://archive.ubuntu.com/ubuntu jammy/main amd64 Packages
# The gcc-11=11.4.0-1ubuntu1~22.04 version should be installed as it is matching "gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"  is included in the /proc/version field.
#
      - block:
        - name: get gcc-{{ gcc_version }} package in apt repo list
          shell:
            cmd: "apt-cache madison gcc-{{ gcc_version }} "
            executable: /bin/bash
          register: versions
      
        - name: gcc-{{ gcc_version }} package version
          set_fact:
            versions: "{{ 1 | extract(item | split('|')) | trim }}"
          when: (1 | extract(item | split('|')) | trim) in proc_version_output.stdout
          loop: "{{ versions.stdout_lines }}"

        - name: Install compile kernel gcc version
          package:
            name: gcc-{{ gcc_version }}={{ versions }}
            state: present
          register: pkgrc
          until: pkgrc is success
          retries: 10
          delay: 10
        when: gcc_version_check.rc != 0   # compile kernel gcc version not install
      when: gcc_version is defined and gcc_version | length > 0 # Did not succeed in getting the gcc version of the compiled kernel

    - set_fact:
        emon_gcc_options: "--c-compiler $(which gcc{{ '-' + gcc_version if gcc_version is defined and gcc_version | length > 0 else '' }})"
    
  delegate_to: "{{ trace_node.1 }}"
  become: true
  
