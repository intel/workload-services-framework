<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>PDU Power Meter</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">

  <style>
    body {
      padding-top: 20px;
      padding-bottom: 20px;
    }

    .header {
      padding-bottom: 20px;
      padding-right: 15px;
      padding-left: 15px;
      border-bottom: 1px solid #e5e5e5;
    }

    .header h3 {
      margin-top: 0;
      margin-bottom: 0;
      line-height: 40px;
    }

    .container {}

    .wrapper {
      display: flex;
      box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
      margin: 2rem;
    }

    .handle {
      height: 70px;
      width: 5px;
      background-color: DodgerBlue;
    }

    .content {
      flex-grow: 1;
    }

    /* Style the tab content */
    .tabcontent {
      display: block;
      padding: 6px 12px;
      border: 1px solid #ccc;
      border-top: none;
    }

    @media print {
      .printable {
        zoom: 50%;
      }
    }
  </style>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.42.0/apexcharts.min.css" />
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.42.0/apexcharts.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.15.0/Sortable.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"></script>
</head>

<body>
  <div class="card shadow py-2 px-2">

    <div id="PowerUtil" class="tabcontent px-0 py-2">
      <div class="card-header">
        <span style="font-weight: 500;">Power Usage Trend</span>
        <button class="btn btn-success btn-sm" style="float:right;" onClick="window.print()"><i class="fa fa-print"
            aria-hidden="true"></i>Save as PDF</button>
        <div class="row d-flex"></div>
      </div>
      <div class="row" id="sortable_power_util">
        <div class="card-body overflow-auto row col-12 wrapper">
          <div class="handle col-1"></div>
          <div class="col-11 printable" id="power-watt-id" style="height: 400px;"></div>
        </div>
        <div class="card-body overflow-auto row col-12 wrapper">
          <div class="handle col-1"></div>
          <div class="col-11 printable" id="energy-watt-id" style="height: 400px;"></div>
        </div>
      </div>
    </div>
  </div>

  <script>
    {{ pdu_data }}
  </script>

  <script type="text/javascript">
    function hide_chart(id) {
      const el = document.getElementById(id);
      el.parentNode.style.display = 'none';
    }

    function create_line_chart(id, options) {
      const el = document.getElementById(id);
      const chart = new ApexCharts(el, _.merge(options, {
        chart: {
          id: id,
          type: 'line',
          height: '350px',
          redrawOnParentResize: true,
          redrawOnWindowResize: true,
          group: 'synchronized',
          zoom: {
            enabled: true
          },
          events: {
            mounted: function(ctx, config) {
              const lowest = ctx.getLowestValueInSeries(0)
              const highest = ctx.getHighestValueInSeries(0)
            
              ctx.addPointAnnotation({
                x: new Date(ctx.w.globals.seriesX[0][ctx.w.globals.series[0].indexOf(lowest)]).getTime(),
                y: lowest,
                label: {
                  text: 'Min: ' + lowest,
                  offsetY: 2,
                  borderColor: '#00E396',
                  style: {
                    color: '#fff',
                    background: '#00E396'
                  },
                }
              })
            
              ctx.addPointAnnotation({
                x: new Date(ctx.w.globals.seriesX[0][ctx.w.globals.series[0].indexOf(highest)]).getTime(),
                y: highest,
                label: {
                  text: 'Max: ' + highest,
                  offsetY: 2,
                  borderColor: '#00E396',
                  style: {
                    color: '#fff',
                    background: '#00E396'
                  },
                },
              })
			      }
          },
          toolbar: {
            show: true,
            offsetX: 0,
            offsetY: 0,
            tools: {
              download: true,
              selection: true,
              zoom: true,
              zoomin: true,
              zoomout: true,
              pan: true,
              reset: true | '<img src="/static/icons/reset.png" width="20">',
              customIcons: []
            },
            export: {
              csv: {
                filename: undefined,
                columnDelimiter: ',',
                headerCategory: 'category',
                headerValue: 'value',
                dateFormatter(timestamp) {
                  return new Date(timestamp).toDateString()
                }
              },
              svg: {
                filename: undefined,
              },
              png: {
                filename: undefined,
              }
            },
            autoSelected: 'zoom'
          },
        },
        stroke: {
          width: 1.5,
          opacity: 1
        },
        markers: {
          size: 3,
          strokeColors: '#2E93fA',
          shape: "circle",
          radius: 2,
          offsetX: 0,
          offsetY: 0,
        },
        xaxis: {
          type: 'datetime',
          labels: {
            datetimeUTC: true,
          },
          min: min_time,
          max: max_time,
          title: {
            text: 'Time',
          },
        },
        yaxis: {
          labels: {
            minWidth: 20,
          },
        },
        tooltip: {
          shared: false,
          x: {
            format: 'MMM dd HH:mm:ss',
          },
        },
        legend: {
          show: true,
          position: 'bottom',
          horizontalAlign: 'center',
          onItemClick: {
            toggleDataSeries: true
          },
          onItemHover: {
            highlightDataSeries: true
          },
        },
      }));
      chart.render();
    }

    document.addEventListener('DOMContentLoaded', function () {
      function create_power_watt_chart(id, title) {
        try {
          create_line_chart(id, {
            title: {
              text: title,
            },
            yaxis: {
              decimalsInFloat: 2,
              title: {
                text: 'Watt',
              }
            },
            annotations: {
              yaxis: [{
                y: avg_power,
                borderColor: '#00E396',
                label: {
                  borderColor: '#00E396',
                  style: {
                    color: '#fff',
                    background: '#00E396'
                  },
                  text: 'Avg: ' + avg_power
                }
              }],
            },
            series: [{
              name: 'W',
              data: data_power
            }],
          });
        } catch (e) {
          hide_chart(id);
          console.log(e);
        }
      }

      function create_energy_watt_chart(id, title) {
        try {
          create_line_chart(id, {
            title: {
              text: title,
            },
            yaxis: {
              decimalsInFloat: 2,
              title: {
                text: 'Watt-hour',
              }
            },
            annotations: {
              yaxis: [{
                y: avg_energy,
                borderColor: '#00E396',
                label: {
                  borderColor: '#00E396',
                  style: {
                    color: '#fff',
                    background: '#00E396'
                  },
                  text: 'Avg: ' + avg_energy
                }
              }],
            },
            series: [{
              name: 'Wh',
              data: data_energy
            }],
          });
        } catch (e) {
          hide_chart(id);
          console.log(e);
        }
      }

      create_power_watt_chart('power-watt-id', 'Active Power (W)');
      create_energy_watt_chart('energy-watt-id', 'Active Energy (Wh)');

      function createSortable(div_id) {
        Sortable.create(document.getElementById(div_id), {
          group: {
            name: 'shared',
            pull: 'clone' // To clone: set pull to 'clone'
          },
          ghostClass: 'blue-background-class',
          animation: 150
        });
      }

      createSortable('sortable_power_util');

    });
  </script>
</body>
</html>
