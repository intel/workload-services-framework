#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- block:

  - name: "convert sar log on {{ trace_node.1 }}"
    shell:
      cmd: |
        for logs in sar-*.logs; do
          if [ -e "$logs" ]; then
            S_TIME_FORMAT=ISO S_TIME_DEF_TIME=UTC sar {{ sar_options }} -f $logs > $logs.txt 2>&1
          fi
        done
      chdir: "{{ trace_data_path }}"
      executable: /bin/bash
    become: true
  
  - name: get sar_options for sadf
    set_fact:
      sadf_options: >-
        {{
          lookup('file', 'sar_profiles.yaml') |
          regex_findall('sar_options\:.*.*', multiline=True) |
          map('regex_replace', '.*: *(.*)$', '\1') |  join(" ")
        }}
  
  - name: Get sadf output
    shell:
      cmd: |
        for logs in sar-*.logs; do
          [ ! -r "$logs" ] || S_TIME_DEF_TIME=UTC sadf -d -U -- {{ sadf_options }} -t $logs > $logs-sadf.logs 2>&1 || true
        done
      chdir: "{{ trace_data_path }}"
      executable: /bin/bash
    become: true
  
  - name: Copy profile to log folder
    copy:
      src: sar_profiles.yaml
      dest: "{{ trace_data_local_path }}/sar_profiles.yaml"
    delegate_to: localhost
  
  - name: Get sar fles
    shell:
      cmd: ls -1
      chdir: "{{ trace_data_path }}"
      executable: /bin/bash
    register: sar_files
  
  - name: Fetch sar files
    fetch:
      src: "{{ trace_data_path }}/{{ item }}"
      dest: "{{ trace_data_local_path }}/"
      flat: true
    loop: "{{ sar_files.stdout_lines | reject('==', 'sar.pid') }}"
  
  delegate_to: "{{ trace_node.1 }}"
  ignore_errors: true
  become: false

