<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Intel GPU Top Charts</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">

  <style>
    body {
      padding-top: 20px;
      padding-bottom: 20px;
    }

    .header {
      padding-bottom: 20px;
      padding-right: 15px;
      padding-left: 15px;
      border-bottom: 1px solid #e5e5e5;
    }

    .header h3 {
      margin-top: 0;
      margin-bottom: 0;
      line-height: 40px;
    }

    .container {}

    .wrapper {
      display: flex;
      box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
      margin: 2rem;
    }

    .content {
      flex-grow: 1;
    }

    .tab {
      overflow: hidden;
      border: 1px solid #ccc;
      background-color: #f1f1f1;
    }

    /* Style the buttons that are used to open the tab content */
    .tab button {
      background-color: inherit;
      float: left;
      border: 1px solid lightgray;
      outline: none;
      cursor: pointer;
      padding: 8px 10px;
      transition: 0.3s;
      font-weight: 600;
      font-size: 0.8rem;
    }

    /* Change background color of buttons on hover */
    .tab button:hover {
      background-color: #ddd;
    }

    /* Create an active/current tablink class */
    .tab button.active {
      background-color: #00aeef;
      font-size: bold !important;
      color: white !important;
    }

    /* Style the tab content */
    .tabcontent {
      display: none;
      padding: 6px 12px;
      border: 1px solid #ccc;
      border-top: none;
    }

    @media print {
      .printable {
        zoom: 50%;
      }
    }
  </style>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.54.1/apexcharts.min.css" />
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/apexcharts/3.54.1/apexcharts.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"></script>
</head>

<body>

  <div class="card shadow py-2 px-2">
    <div class="tab">
      <button class="tablinks" id="igt-button-template" sytle="display:none"></button>
    </div>
    <div class="tabcontent px-0 py-2" style="display:none" id="igt-dev-template">
      <div class="card-header" style="display:block">
        <span style="font-weight: 500;"></span>
        <button class="btn btn-success btn-sm" style="float:right;" onClick="window.print()"><i class="fa fa-print"
            aria-hidden="true"></i>Save as PDF</button>
        <div class="row d-flex"></div>
      </div>
      <div class="row">
        <div class="card-body overflow-auto row col-12 wrapper" style="display:none">
          <div class="col-11 printable" style="height: 400px;"></div>
        </div>
      </div>
    </div>
  </div>

  <script>
    
    {{ igtstat_data }}

  </script>

  <script type="text/javascript">
    function hide_chart(id) {
      const el = document.getElementById(id);
      el.parentNode.style.display = 'none';
    }

    function create_line_chart(id, options) {
      const el = document.getElementById(id);
      const chart = new ApexCharts(el, _.merge(options, {
        chart: {
          id: id,
          type: 'line',
          height: '350px',
          redrawOnParentResize: true,
          redrawOnWindowResize: true,
          group: 'synchronized',
          zoom: {
            enabled: true
          },
          toolbar: {
            show: true,
            offsetX: 0,
            offsetY: 0,
            tools: {
              download: true,
              selection: true,
              zoom: true,
              zoomin: true,
              zoomout: true,
              pan: true,
              reset: true | '<img src="/static/icons/reset.png" width="20">',
              customIcons: []
            },
            export: {
              csv: {
                filename: undefined,
                columnDelimiter: ',',
                headerCategory: 'category',
                headerValue: 'value',
                dateFormatter(timestamp) {
                  return new Date(timestamp).toDateString()
                }
              },
              svg: {
                filename: undefined,
              },
              png: {
                filename: undefined,
              }
            },
            autoSelected: 'zoom'
          },
        },
        stroke: {
          width: 1.5,
          opacity: 1
        },
        xaxis: {
          type: 'datetime',
          labels: {
            datetimeUTC: true,
          },
          min: min_time,
          max: max_time,
        },
        yaxis: {
          labels: {
            minWidth: 20,
          },
        },
        tooltip: {
          shared: false,
          x: {
            format: 'MMM dd HH:mm:ss',
          },
        },
        legend: {
          show: true,
          showForSingleSeries: true,
          position: 'bottom',
          horizontalAlign: 'center',
          onItemClick: {
            toggleDataSeries: true
          },
          onItemHover: {
            highlightDataSeries: true
          },
        },
      }));
      chart.render();
    }

    document.addEventListener('DOMContentLoaded', function () {
      var dev_template=document.getElementById('igt-dev-template');
      var button_template=document.getElementById('igt-button-template');
      var i=0,j=0;
      for (var dev in igt_data) {
        var button_div=button_template.cloneNode(true);
        button_template.parentElement.appendChild(button_div);
        button_div.removeAttribute('id');
        button_div.style.display="block";
        button_div.textContent=dev;
        button_div.setAttribute('onclick', "openTabContent(event, 'card-"+(++i)+"')");
        if (i == 1) button_div.className+=" active";

        var card_div=dev_template.cloneNode(true);
        dev_template.parentElement.appendChild(card_div);
        card_div.setAttribute('id', 'card-'+i);
        if (i == 1) {
          card_div.className+=" active";
          card_div.style.display="block";
        }
        card_div.querySelector('span').textContent='/dev/dri/'+dev;

        var template=card_div.querySelector('.card-body');
        for (var c in igt_data[dev]) {
          var chart1=template.cloneNode(true);
          template.parentElement.appendChild(chart1);
          chart1.removeAttribute('id');
          chart1.style.display="block";
          chart1.children[0].setAttribute('id',"chart-"+(++j));
          create_igt_chart("chart-"+j, c, igt_data[dev][c]);
        }
        template.remove();
      }
      button_template.remove();
      dev_template.remove();
      
      function create_igt_chart(id, title, data) {
        try {
          var series = [];
          for (let k in data) {
            series.push({
              name: k,
              data: data[k],
            });
          }
          create_line_chart(id, {
            title: {
              text: title,
            },
            yaxis: {
              decimalsInFloat: 2,
            },
            series: series,
          });
        } catch (e) {
          hide_chart(id);
          console.log(e);
        }
      }
    });
  </script>
  <script type="text/javascript">
    function openTabContent(evt, tabContentName) {
      // Declare all variables
      var i, tabcontent, tablinks;

      // Get all elements with class="tabcontent" and hide them
      tabcontent = document.getElementsByClassName("tabcontent");
      for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
      }

      // Get all elements with class="tablinks" and remove the class "active"
      tablinks = document.getElementsByClassName("tablinks");
      for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
      }

      // Show the current tab, and add an "active" class to the button that opened the tab
      document.getElementById(tabContentName).style.display = "block";
      evt.currentTarget.className += " active";
    }
  </script>
</body>
</html>
