#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- name: Create the perf directory
  file:
    path: "{{ wl_logs_dir }}/{{ trace_node.1 }}-{{ itr | default(1) }}-perf"
    state: directory
  delegate_to: localhost
  become: false
  ignore_errors: true

- name: Process perf records
  shell:
    cmd: |
      {% if perf_action == 'record' %}
        for record in perf-*.record; do
          perf report {{ perf_report_options }} -i $record > ${record/.record/.report}
          {% if perf_flamegraph %}
            perf script {{ perf_script_options }} -i $record > $record.out
          {% endif %}
        done
      {% endif %}
    chdir: "/tmp/{{ wl_namespace }}-{{ trace_node.1 }}-perf"
    executable: /bin/bash
  delegate_to: "{{ trace_node.1 }}"
  ignore_errors: true
  become: true

- name: Get perf files
  shell:
    cmd:   ls -1
    chdir: "/tmp/{{ wl_namespace }}-{{ trace_node.1 }}-perf"
    executable: /bin/bash
  register: perf_files
  delegate_to: "{{ trace_node.1 }}"
  ignore_errors: true
  become: false

- name: Fetch perf files
  ansible.builtin.fetch:
    src:  "/tmp/{{ wl_namespace }}-{{ trace_node.1 }}-perf/{{ item }}"
    dest: "{{ wl_logs_dir }}/{{ trace_node.1 }}-{{ itr | default(1) }}-perf/"
    flat: true
  when: (perf_action == 'stat') or ('.record' not in item) or ('.out' in item)
  loop: "{{ perf_files.stdout_lines | reject('==','perf.pid') }}"
  delegate_to: "{{ trace_node.1 }}"
  ignore_errors: true
  become: false

- name: Remove any collection files
  file:
    path: "/tmp/{{ wl_namespace }}-{{ trace_node.1 }}-perf"
    state: absent
  delegate_to: "{{ trace_node.1 }}"
  ignore_errors: true
  become: true

- name: Create flame graph
  include_tasks:
    file: flamegraph.yaml
  when: perf_flamegraph and perf_action == "record"

