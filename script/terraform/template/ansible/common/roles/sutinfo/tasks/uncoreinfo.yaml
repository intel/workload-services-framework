#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- name: Check if msr is available
  command: rdmsr --version
  register: msrrc
  ignore_errors: true

- block:
    
    - name: install msr-tools
      package:
        name: msr-tools
      register: pkgrc
      until: pkgrc is success
      retries: 10
      delay: 10
      environment:
        DEBIAN_FRONTEND: noninteractive
        ACCEPT_EULA: Y

    - name: modprobe msr
      modprobe:
        name: msr
        state: present

  when: msrrc is failed
  ignore_errors: true
  become: true

- name: Read uncore info
  shell:
    cmd: |
      {% if item.key == 'UNCORE' %}[ -e {{ sutinfo_sysfs_uncore00_path }}/min_freq_khz ] && printf "0x%04x\n" $(( $(cat {{ sutinfo_sysfs_uncore00_path }}/min_freq_khz) / 100000 * 256 + $(cat {{ sutinfo_sysfs_uncore00_path }}/max_freq_khz) / 100000 )) || {% endif %} rdmsr -p 0 -c {{ item.value }} || echo 0x0
    executable: /bin/bash
  loop: "{{ sutinfo_uncore_records | dict2items }}"
  register: uncore_info
  ignore_errors: true
  become: true

- name: Get core current frequency
  shell: cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq
  register: proc_freq
  ignore_errors: true
  become: true

- name: Write uncore-info
  copy:
    dest: "{{ wl_logs_dir }}/{{ inventory_hostname }}-sutinfo/uncore-info.json"
    content: "{{ {
      'UncoreInfo': [
        dict(uncore_info.results | map(attribute='item') | map(attribute='key') | zip(uncore_info.results | map(attribute='stdout'))) | combine({
          'CORE_FREQUENCY': (((proc_freq.stdout | default(0) | float) / 1000000) | string),
        })
      ]
    } | to_nice_json }}"
  delegate_to: localhost
  ignore_errors: true
  become: false

