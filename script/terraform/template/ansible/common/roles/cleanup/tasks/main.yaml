#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- name: set reboot false
  set_fact:
    cleanup_reboot_required: false

- name: Restore sysctls
  include_tasks:
    file: sysctl.yaml

- name: Restore sysfs
  include_tasks:
    file: sysfs.yaml

- name: Restore BIOS
  include_role:
    name: bios
    tasks_from: cleanup
  when:
  - sut_reboot | default(true) | bool
  - not ansible_host in my_ip_list.split(',')
  - (playbook_dir+'/roles/bios') is exists

- name: Remove restore path
  file:
    path: "{{ cleanup_restore_path }}"
    state: absent
  failed_when: false

- name: check label stat
  stat:
    path: "{{ playbook_dir }}/roles/{{ item.split('=')[0].split('-')[2] | lower }}/tasks/cleanup.yaml"
  when:
  - item.startswith("HAS-SETUP-")
  register: label_check
  loop: "{{ k8s_node_labels | default([]) }}"
  delegate_to: localhost

- name: provision "{{ label_result.item }}"
  include_role:
    name: "{{ label_result.item.split('=')[0].split('-')[2]|lower }}"
    tasks_from: cleanup
  vars:
    label_name: "{{ label_result.item }}"
  when:
    - sut_reboot | default(true) | bool
    - label_result.stat.exists | default(false) | bool
  loop: "{{ label_check.results }}"
  loop_control:
    loop_var: label_result

- name: Restore kernel modules
  include_tasks:
    file: kernel-modules.yaml

- name: Restore kernel args
  include_tasks:
    file: kernel-args.yaml
  when: 
  - sut_reboot | default(true) | bool
  - not ansible_host in my_ip_list.split(',')

- name: reboot
  command: "reboot"
  async: 1
  poll: 0
  ignore_errors: yes
  when:
  - cleanup_reboot_required
  - sut_reboot | default(true) | bool
