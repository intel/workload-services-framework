#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- name: set reboot false
  set_fact:
    cleanup_reboot_required: false
    cleanup_poweroff_required: false

- name: Restore services
  systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  when: (ansible_connection | default('ssh')) in ['ssh']
  loop: "{{ sut_restore_services | split(',') | reject('==','') }}"
  failed_when: false
  no_log: true

- name: Restore sysctls
  include_tasks:
    file: sysctl.yaml

- name: Restore sysfs
  include_tasks:
    file: sysfs.yaml

- name: Restore BIOS
  include_role:
    name: bios
    tasks_from: cleanup
  when:
  - sut_reboot | bool
  - sut_restore_bios | bool
  - ansible_host not in my_ip_list.split(',')
  - (playbook_dir+'/roles/bios') is exists
  - (ansible_connection | default('ssh')) in ['ssh']

- name: Remove restore path
  file:
    path: "{{ cleanup_restore_path }}"
    state: absent
  failed_when: false

- name: Restore label provisions
  include_role:
    name: "{{ label_roles | select('in',label_name|lower) | first }}"
    tasks_from: cleanup
  when:
  - label_name.startswith('HAS-SETUP-')
  - label_roles | select('in',label_name|lower) | length > 0
  loop: "{{ k8s_node_labels }}"
  loop_control:
    loop_var: label_name
  vars:
    label_roles: "{{ lookup('pipe','ls -f '+playbook_dir+'/roles/*/tasks/cleanup.yaml') | split('\n') | map('regex_replace','^.*/roles/([a-z-]*)/.*$','\\1') | sort(reverse=true) }}"

- name: Restore kernel modules
  include_tasks:
    file: kernel-modules.yaml
  when: (ansible_connection | default('ssh')) in ['ssh']

- name: Restore kernel args
  include_tasks:
    file: kernel-args.yaml
  when: 
  - sut_reboot | bool
  - not ansible_host in my_ip_list.split(',')
  - (ansible_connection | default('ssh')) in ['ssh']

- name: Restore /etc/environment
  include_role:
    name: no-proxy
    tasks_from: cleanup
  when:
  - (ansible_connection | default('ssh')) in ['ssh']
  - (groups.cluster_hosts+groups.off_cluster_hosts)|map('extract',hostvars,['private_ip'])|select('defined')|unique|length>1

- name: Restore MSR
  include_role:
    name: msr
    tasks_from: cleanup
  when:
  - (playbook_dir + '/roles/msr/tasks/cleanup.yaml') is exists

- name: Restore tpmi
  include_role:
    name: tpmi
    tasks_from: cleanup
  when:
  - (playbook_dir + '/roles/tpmi/tasks/cleanup.yaml') is exists
  - (ansible_connection | default('ssh')) in ['ssh']

- name: cleanup cgroups
  include_role:
    name: cgroup
    tasks_from: cleanup
  when:
  - sut_use_cgroup | default(false) | bool
  - (ansible_connection | default('ssh')) in ['ssh']

- name: poweroff or reboot sut
  include_tasks:
    file: poweroff-reboot.yaml
  when: (ansible_connection | default('ssh')) in ['ssh']

