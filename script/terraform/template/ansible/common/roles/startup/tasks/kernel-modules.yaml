#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- name: set kernel args
  set_fact:
    kernel_module_list: "{{ (kernel_module_list + (sut_kernel_modules | split(',') | map('trim') | select('match',item+':.*') | map('regex_replace','^[^:]*:','') | map('trim') | map('split',' '))) | flatten | reject('==','') }}"
  loop: "{{ group_names }}"
  vars:
    kernel_module_list: "{{ wl_kernel_modules | list }}"

- name: "modprobe modules"
  command: "modprobe {{ item }}"
  loop: "{{ kernel_module_list }}"
  register: modules_orig
  ignore_errors: true

- name: "try modprobe lower-case modules"
  command: "modprobe {{ item }}"
  loop: "{{ modules_orig.results | rejectattr('rc','==',0) | map(attribute='item') | map('lower') }}"
  register: modules_lower
  ignore_errors: true

- name: Update modules.conf
  blockinfile:
    path: "/etc/modules-load.d/99-wsf-settings.conf"
    block: "{{ (modules_orig.results+modules_lower.results) | rejectattr('rc','>',0) | map(attribute='item') | unique | join('\n') }}"
    create: yes
  when: kernel_module_list | length > 0

- name: Print out kernel modules
  debug:
    msg: "[{{ inventory_hostname }}]: Host Kernel Modules+ {{ (modules_orig.results+modules_lower.results) | rejectattr('rc','>',0) | map(attribute='item') | unique | join(',') }}"
  when: kernel_module_list | length > 0

