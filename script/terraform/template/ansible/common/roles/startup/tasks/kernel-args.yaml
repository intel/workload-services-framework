#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- name: set kernel args
  set_fact:
    kernel_args_list: "{{ (kernel_args_list + (sut_kernel_args | split(',') | map('trim') | select('match',item+':.*') | map('regex_replace','^[^:]*:','') | map('trim') | map('split',' '))) | flatten | reject('==','') }}"
  loop: "{{ group_names }}"
  vars:
    kernel_args_list: "{{ wl_kernel_args.values() | list }}"

- name: Detect OS
  shell: 
    cmd: ". /etc/os-release; echo $ID"
    executable: /bin/bash
  register: os
  when: kernel_args_list | length > 0

- name: add kernel parameters
  blockinfile:
    path: "{{ startup_kernel_args_actions[os.stdout]['grub_path'] }}"
    create: yes
    block: |
      GRUB_CMDLINE_LINUX_DEFAULT="${GRUB_CMDLINE_LINUX_DEFAULT} {{ kernel_args_list | join(' ') }}"
  register: kargs
  ignore_errors: yes
  when: kernel_args_list | length > 0

- name: update grub
  shell: "{{ startup_kernel_args_actions[os.stdout]['update_grub_cmd'] }}"
  when:
  - kernel_args_list | length > 0
  - (kargs.msg == 'Block inserted') or (kargs.msg == 'File created')
  ignore_errors: yes

- name: request reboot
  set_fact:
    startup_reboot_required: "{{ startup_reboot_required or (kargs.msg == 'Block inserted') or (kargs.msg == 'File created') }}"
  when: kernel_args_list | length > 0


