#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- name: Set sysctl default settings
  set_fact:
    sysctl_options_dict: "{{ sysctl_options_dict | combine(dict((sut_sysctl_options=='default') | ternary(sut_sysctl_default_options,'') | split(',') | map('trim') | select('match',item+':.*') | map('regex_replace','^[^:]*:','') | reject('==','') | map('split','=') | map('map','trim'))) }}"
  loop: "{{ group_names }}"
  vars:
    sysctl_options_dict: {}

- name: overwrite by workload settings
  set_fact:
    sysctl_options_dict: "{{ sysctl_options_dict | combine(wl_sysctl_options_dict | default({})) | combine(cluster_config.cluster | zip_longest([],fillvalue={'vm_group':'worker','sysctls':{}}) | map('last') | map('dict2items') | zip(cluster_config.cluster | map('dict2items')) | map('flatten') | map('items2dict') | selectattr('vm_group','in',group_names) | map(attribute='sysctls') | map('dict2items') | flatten | items2dict) }}"
  vars:
    cluster_config: "{{ lookup('file',wl_logs_dir+'/cluster-config.yaml') | from_yaml }}"

- name: overwrite by user settings
  set_fact:
    sysctl_options_dict: "{{ sysctl_options_dict | combine(dict((sut_sysctl_options=='default') | ternary('',sut_sysctl_options) | split(',') | map('trim') | select('match',item+':.*') | map('regex_replace','^[^:]*:','') | reject('==','') | map('split','=') | map('map','trim'))) }}"
  loop: "{{ group_names }}"

- name: Check if sysctl restore available
  stat:
    path: "{{ startup_restore_path }}/sysctl"
  register: sysctlsav
  when:
  - sysctl_options_dict.keys() | length > 0

- name: Restore sysctl settings
  command: "sysctl -p{{ startup_restore_path }}/sysctls -q"
  when: 
  - sysctl_options_dict.keys() | length > 0
  - ((csp | default('static')) == 'static')
  - sysctlsav.stat.exists
  failed_when: false

- name: Save sysctl values
  shell:
    cmd: |
      sysctl -e {{ sysctl_options_dict.keys() | list | join(' ') }} > {{ startup_restore_path }}/sysctls
    executable: /bin/bash
  failed_when: false
  when:
  - ((csp | default('static')) == 'static')
  - sysctl_options_dict.keys() | length > 0

- name: Add sysctls to /etc/sysctl.d
  template:
    src: 99-wsf-sysctls.conf.j2
    dest: /etc/sysctl.d/99-wsf-sysctls.conf
  failed_when: false
  when:
  - sysctl_options_dict.keys() | length > 0

- name: Apply sysctls
  shell:
    cmd: |
      sysctl -p/etc/sysctl.d/99-wsf-sysctls.conf -q
    executable: /bin/bash
  failed_when: false
  when:
  - sysctl_options_dict.keys() | length > 0

- name: Print out sysctls changes
  debug:
    msg: "[{{ inventory_hostname }}]: Host sysctls+ {{ item.key }}={{ item.value }}"
  loop: "{{ sysctl_options_dict | dict2items }}"

