#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#
---
- name: Recording timing
  hosts: localhost
  gather_facts: false
  become: false
  tasks:

    - include_role:
        name: timing
        tasks_from: start-setup

- name: "Cluster hosts preparation"
  hosts: cluster_hosts
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:

    - name: "Check cluster status"
      ansible.builtin.include_role:
        name: installation
        tasks_from: check-cluster
      when: (ansible_connection|default('ssh')) == 'ssh'

    - name: "Prepare the cluster"
      ansible.builtin.include_role:
        name: installation
        tasks_from: prepare-cluster
      when:
      - (ansible_connection|default('ssh')) == 'ssh'
      - sut_sudo | default(true) | bool

- name: "Create cluster on controller node"
  hosts: "{{ ('controller' in groups) | ternary('controller','localhost') }}"
  gather_facts: false
  become: false
  tasks:

    - name: "Create the cluster"
      ansible.builtin.include_role:
        name: installation
        tasks_from: create-cluster
      when:
      - (ansible_connection|default('ssh')) == 'ssh'
      - sut_sudo | default(true) | bool

- name: "Join workload hosts to controller"
  hosts: workload_hosts
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:

    - name: "Join workers"
      ansible.builtin.include_role:
        name: installation
        tasks_from: join-workers
      when:
      - (ansible_connection|default('ssh')) == 'ssh'
      - sut_sudo | default(true) | bool

- name: "Finalize controller installation tasks"
  hosts: "{{ ('controller' in groups) | ternary('controller','localhost') }}"
  gather_facts: false
  become: false
  tasks:

    - name: "Finalize controller"
      ansible.builtin.include_role:
        name: installation
        tasks_from: finalize-controller
      when: (ansible_connection|default('ssh')) == 'ssh'

- name: "Transfer Images"
  hosts: "{{ ('controller' in groups) | ternary('controller','localhost') }}"
  gather_facts: false
  become: false
  tasks:

    - include_role:
        name: timing
        tasks_from: start-image-transfer

    - name: Record build commit in workload-config
      include_role:
        name: docker-image
        tasks_from: to-config
      when:
      - (wl_docker_images | default({}) | dict2items | length) > 0
      - (ansible_connection|default('ssh')) in ['ssh','local']

    - name: Transfer image(s) to docker registry
      include_role:
        name: docker-image
        tasks_from: to-registry
      when:
      - (wl_docker_images | default({}) | dict2items | length) > 0
      - (ansible_connection|default('ssh')) in ['ssh','local']
      - k8s_enable_registry | default(true) | bool
      - (k8s_remote_registry_url | split(':') | first) not in (my_ip_list | split(','))

    - include_role:
        name: timing
        tasks_from: stop-image-transfer

- name: "Finalize workload hosts installation tasks"
  hosts: workload_hosts
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:

    - name: "Finalize workers"
      ansible.builtin.include_role:
        name: installation
        tasks_from: finalize-workers
      when:
      - (ansible_connection|default('ssh')) == 'ssh'
      - sut_sudo | default(true) | bool

- name: Recording timing
  hosts: localhost
  gather_facts: false
  become: false
  tasks:

    - include_role:
        name: timing
        tasks_from: stop-setup

