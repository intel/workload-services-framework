#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- name: get node name
  shell: |
    kubectl get nodes -o='custom-columns=name:.metadata.name,ip:.status.addresses[?(@.type=="InternalIP")].address' --no-headers | grep -F " {% if (hostvars[node]['private_ip']|ipaddr) %}{{ hostvars[node]['private_ip'] }}{% else %}{{ query('dig',hostvars[node]['private_ip'])|first }}{% endif %}" | cut -f1 -d' '
  register: nodename
  until: nodename.stdout_lines | length > 0
  retries: 5
  delay: 5
  when: hostvars[node]['k8s_node_labels'] | default([]) | length > 0
  ignore_errors: true

- name: save node labels
  set_fact: 
    node_labels_saved: "{% if (wl_logs_dir+'/'+node+'-k8s-node-labels.json') is exists %}{{ lookup('file',wl_logs_dir+'/'+node+'-k8s-node-labels.json') | from_json | default({},true) }}{% else %}{{ {} }}{% endif %}"
  ignore_errors: true

- name: remove saved node labels file
  file:
    path: "{{ wl_logs_dir }}/{{ node }}-k8s-node-labels.json"
    state: absent
  delegate_to: localhost
  ignore_errors: true

- name: remove/restore labels
  command: |
    kubectl label --overwrite node {{ nodename.stdout_lines | first }} {{ item.split('=')[0] }}{{ (item.split('=')[0] in node_labels_saved.keys()) | ternary('=' + (node_labels_saved[item.split('=')[0]] | default('-')), '-') }}
  loop: "{{ hostvars[node]['k8s_node_labels'] | default([]) }}"
  ignore_errors: true

