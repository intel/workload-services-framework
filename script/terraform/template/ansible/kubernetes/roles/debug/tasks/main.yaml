#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- name: print pod status
  shell:
    cmd: |
      kubectl get pod -A
      for p in $(kubectl get pod {{ debug_options }} --ignore-not-found --field-selector status.phase!=Running -o name); do
        echo === pod info: $p ===
        kubectl describe {{ debug_options }} $p | sed "s|^|$p: |"
      done
      for p in $(kubectl get pod {{ debug_options }} --ignore-not-found --field-selector status.phase!=Running -o name); do
        echo === pod logs: $p ===
        kubectl logs {{ debug_options }} --all-containers=true --prefix=true $p
      done
    executable: /bin/bash
  delegate_to: "{{ ('controller' in groups) | ternary('controller-0','localhost') }}"
  failed_when: false
  run_once: true

- name: print node status
  shell:
    cmd: |
      for n in $(kubectl get node --ignore-not-found --field-selector spec.unschedulable=true); do
        echo === node info: $n ===
        kubectl describe node $n | sed "s|^|$n: |"
      done
    executable: /bin/bash
  delegate_to: "{{ ('controller' in groups) | ternary('controller-0','localhost') }}"
  failed_when: false
  run_once: true

- name: Get cluster logs
  shell:
    cmd: |
      kubectl get pod -A
      kubectl describe pod {{ debug_options }}
      for p in $(kubectl get pod {{ debug_options }} --ignore-not-found -o name); do
        echo === pod logs $p ===
        kubectl logs {{ debug_options }} --all-containers=true --prefix=true $p
      done
      kubectl describe node
    executable: /bin/bash
  delegate_to: "{{ ('controller' in groups) | ternary('controller-0','localhost') }}"
  register: cluster_logs
  failed_when: false
  run_once: true
  no_log: true

- name: Save cluster logs locally
  copy:
    content: "{{ cluster_logs.stdout | default('') }}"
    dest: "{{ wl_logs_dir }}/kubernetes-cluster.logs"
  delegate_to: localhost
  run_once: true

