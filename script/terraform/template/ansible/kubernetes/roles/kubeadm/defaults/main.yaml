#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

k8s_version: "1.26.6"
k8s_pod_cidr: "10.244.0.0/16"
k8s_service_cidr: "10.96.0.0/12"
k8s_cgroup_driver: "systemd"
k8s_kubeadm_options: {}
k8s_kubeadm_options_default:
  ClusterConfiguration:
    apiVersion: kubeadm.k8s.io/v1beta3
    kind: ClusterConfiguration
    networking:
      serviceSubnet: "{{ k8s_service_cidr }}"
      podSubnet: "{{ k8s_pod_cidr }}"
    kubernetesVersion: "v{{ k8s_version }}"
  KubeletConfiguration:
    apiVersion: kubelet.config.k8s.io/v1beta1
    kind: KubeletConfiguration
    cgroupDriver: "{{ k8s_cgroup_driver }}"
  InitConfiguration:
    apiVersion: kubeadm.k8s.io/v1beta3
    kind: InitConfiguration
    localAPIEndpoint:
      advertiseAddress: "{{ k8s_apiserver_ip | default(private_ip) }}"
      bindPort: "{{ k8s_apiserver_port | default(6443) }}"
    nodeRegistration:
      criSocket: "unix:///var/run/containerd/containerd.sock"

k8s_kubelet_config_path:
  ubuntu: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
  centos: /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
  rhel: /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
  debian: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
  anolis: /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf

k8s_join_timeout: "600"
k8s_logs_level: 2
