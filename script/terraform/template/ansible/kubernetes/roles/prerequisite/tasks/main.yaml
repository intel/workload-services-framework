#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

  - name: disable named
    service:
      name: named
      state: stopped
      enabled: no
    ignore_errors: yes
    become: yes

  - name: Restart systemd-resolved.service
    become: true
    systemd:
      name: systemd-resolved
      daemon_reload: yes
      enabled: yes
      state: restarted
    ignore_errors: yes
    when: ((csp | default('static')) == 'alicloud')

  - name: Disable SWAP
    command: swapoff -a
    become: yes

  - name: Get local time
    shell: |
      cat /etc/timezone
      date -Ins
    register: datetime
    delegate_to: localhost
    when: k8s_sync_time | default('true') | bool

  - name: Syncronize date time
    shell:  |
      timedatectl set-timezone '{{ datetime.stdout_lines | first }}'
      date -Ins -s '{{ datetime.stdout_lines | last }}'
    become: yes
    when: k8s_sync_time | default('true') | bool

  - name: Disable SWAP in fstab
    replace:
      path: /etc/fstab
      regexp: '^([^#].*\s+swap\s+sw\s+.*)$'
      replace: '# \1'
    become: yes

  - name: modprobe overlay and br_netfilter
    shell: |
      modprobe overlay
      modprobe br_netfilter
    become: yes

  - name: Add conf for containerd
    blockinfile:
      path: "/etc/modules-load.d/containerd.conf"
      block: |
        overlay
        br_netfilter
      create: yes
    become: yes

  - name: Add conf for containerd
    blockinfile:
      path: "/etc/sysctl.d/99-kubernetes-cri.conf"
      block: |
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1
        net.bridge.bridge-nf-call-ip6tables = 1
      create: yes
    become: yes

  - name: Disable net.ipv4.ip_forward setting in sysctl.conf
    replace:
      path: /etc/sysctl.conf
      regexp: '^\s*(net.ipv4.ip_forward\s*=\s*.*)$'
      replace: '# \1'
    become: yes

  - name: Apply new settings
    command: sysctl --system
    become: yes

  - name: Work on CNI prerequisite
    include_role:
      name: "cni-{{ k8s_cni }}"
      tasks_from: prerequisite.yaml
    when: (playbook_dir + '/roles/cni-' + k8s_cni + '/tasks/prerequisite.yaml') is exists
