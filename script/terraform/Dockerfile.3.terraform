## terraform-base

#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#
ARG RELEASE
ARG OS_VER=22.04
ARG OS_IMAGE=ubuntu

ARG DOCKER_CLI_VER=24.0.5
ARG DOCKER_CLI_IMG=docker:${DOCKER_CLI_VER}-dind
FROM ${DOCKER_CLI_IMG} as dockercli

FROM ${OS_IMAGE}:${OS_VER} as flamegraph
RUN  apt-get update && apt-get install -y git

ARG FLAMEGRAPH_VER=d9fcc272b6a08c3e3e5b7919040f0ab5f8952d65
ARG FLAMEGRAPH_REPO=https://github.com/brendangregg/FlameGraph.git
RUN  git clone ${FLAMEGRAPH_REPO} && \
    cd FlameGraph && \
    git checkout ${FLAMEGRAPH_VER}

FROM ${OS_IMAGE}:${OS_VER}
ENV DEBIAN_FRONTEND=noninteractive
RUN  apt-get update && apt-get install -y skopeo zip less gnupg curl gawk netcat connect-proxy sudo openssh-client bzip2 tzdata && apt-get clean && rm -rf /var/lib/apt/lists/*

# python3, Ansible and various validation tools
ARG CONDA_DIR=/opt/conda
ARG CONDA_VER=Miniconda3-py311_23.5.2-0
ARG CONDA_REPO=https://repo.anaconda.com/miniconda/${CONDA_VER}-Linux-x86_64.sh
ARG ANSIBLE_VER=8.3.0
ARG ANSIBLE_REPO=conda
RUN curl -L -o ~/miniconda.sh ${CONDA_REPO} && \
    bash ~/miniconda.sh -b -p ${CONDA_DIR} && \
    rm -f ~/miniconda.sh && \
    chmod oug+x ${CONDA_DIR}/etc/profile.d/conda.sh && \
    ${CONDA_DIR}/etc/profile.d/conda.sh && \
    ${CONDA_DIR}/bin/conda install jmespath paramiko lxml pywinrm jq && \
    ${CONDA_DIR}/bin/conda install -c conda-forge ansible==${ANSIBLE_VER} kazoo kafka-python && \
    ${CONDA_DIR}/bin/conda clean --all
ENV PATH=${CONDA_DIR}/bin:$PATH

# Install terraform & packer
ARG TERRAFORM_VER=1.5.5
ARG TERRAFORM_REPO=https://apt.releases.hashicorp.com
ARG PACKER_VER=1.9.4
ARG PACKER_REPO=https://apt.releases.hashicorp.com
RUN  curl ${TERRAFORM_REPO}/gpg | gpg --dearmor > /usr/share/keyrings/hashicorp-archive-keyring.gpg && \
     echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] ${TERRAFORM_REPO} $(. /etc/os-release;echo $VERSION_CODENAME) main" > /etc/apt/sources.list.d/hashicorp.list && \
     apt-get update && apt-get install --fix-missing --fix-broken -y terraform=${TERRAFORM_VER}-* packer=${PACKER_VER}-* && \
     rm -f /etc/apt/sources.list.d/hashicorp.list && \
     apt-get clean && \
     rm -rf /var/lib/apt/lists/*

# Install docker CLI
COPY --from=dockercli /usr/local/bin/docker /usr/local/bin/

# Copy FlameGraph utilities
COPY --from=flamegraph /FlameGraph/stackcollapse-perf.pl /usr/local/bin/
COPY --from=flamegraph /FlameGraph/flamegraph.pl /usr/local/bin/

####
ARG USER=tfu
ARG GROUP=tfu
RUN groupadd -f ${GROUP} && useradd -d /home -M ${USER} -g ${GROUP}
RUN echo "${USER} ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers
RUN groupadd -f docker && usermod -aG docker tfu
####

# Install gosu
ARG GOSU_VER=1.16
ARG GOSU_REPO=https://github.com/tianon/gosu/releases/download/${GOSU_VER}/gosu-amd64
RUN curl -o /usr/local/bin/gosu -SL ${GOSU_REPO} && \
    curl -o /usr/local/bin/gosu.asc ${GOSU_REPO}.asc && \
    chmod +x /usr/local/bin/gosu

# create .ssh
RUN mkdir -p /home/.ssh /root/.ssh && chmod 700 /home/.ssh /root/.ssh

# entry point
COPY entrypoint.sh /
ENTRYPOINT [ "/entrypoint.sh" ]
WORKDIR /opt/workspace

# Setup ssh proxy
RUN echo "Include /opt/terraform/ssh_config" >> /etc/ssh/ssh_config

# Copy script/template
COPY script/ /opt/terraform/script/
COPY template/ /opt/terraform/template/
COPY ssh_config /opt/terraform/

# Link common folders for backward compatibility
RUN ln -s /opt/terraform/script /opt/script && \
    ln -s /opt/terraform/template /opt/template && \
    ln -s /opt/project/stack /opt/stack && \
    ln -s /opt/project/script/csp/opt /opt/csp
