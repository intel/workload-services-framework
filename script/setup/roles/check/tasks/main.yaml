#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- name: check OS
  shell:
    cmd: ". /etc/os-release; echo $ID"
    executable: /bin/bash
  register: os

- name: check apt-get update functions
  apt:
    update_cache: true
  become: true
  when: os.stdout in ['debian','ubuntu']

- name: check yum update functions
  yum:
    update_cache: true
  become: true
  when: os.stdout not in ['debian','ubuntu']

- name: get ~/.netrc permission
  stat:
    path: ~/.netrc
  register: netrc

- name: fail if the ~/.netrc permission is too permissive
  fail:
    msg: "~/.netrc file is too permissive"
  when:
  - netrc.stat.exists
  - netrc.stat.mode != '0400'
  - netrc.stat.mode != '0600'

- name: check internet connectivity
  block:

  - name: check for internet connectivity as root
    ansible.builtin.uri:
      url: "{{ item }}"
      validate_certs: "{{ validate_certs | default(true) | bool }}"
    loop: "{{ check_connectivity_urls }}"
    become: true
    become_flags: -E -H

  - name: check for internet connectivity as a regular user
    ansible.builtin.uri:
      url: "{{ item }}"
      validate_certs: "{{ validate_certs | default(true) | bool }}"
    loop: "{{ check_connectivity_urls }}"

  rescue:

  - name: Install ca-certificates
    package:
      name:
      - ca-certificates
      - curl
      state: present
    register: pkgrc
    become: true
    until: pkgrc is success
    delay: 10
    retries: 10

  - name: re-check for internet connectivity as root
    command: "curl --netrc-optional -fsSL -I {{ item }}"
    loop: "{{ check_connectivity_urls }}"
    become: true
    become_flags: -E -H

  - name: re-check for internet connectivity as a regular user
    command: "curl --netrc-optional -fsSL -I {{ item }}"
    loop: "{{ check_connectivity_urls }}"

- name: get proxy settings from /etc/environment
  shell:
    cmd: ". /etc/environment;echo :$http_proxy:$https_proxy:$no_proxy:"
    executable: /bin/bash
  register: proxies_1

- name: get proxy settings from shell
  shell:
    cmd: "bash -l -c 'echo :$http_proxy:$https_proxy:$no_proxy:'"
    executable: /bin/bash
  register: proxies_2

- name: fail if two proxy values are not the same
  fail:
    msg: "Proxy values defined in /etc/environment different from those from login shell."
  when: proxies_1.stdout != proxies_2.stdout

