#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- block:

  - name: find all certificates
    find:
      paths: "{{ dev_cert_conf_dir }}"
      patterns: "*.crt"
    register: certs
    delegate_to: reg_host
    run_once: true

  - name: fetch cert from reg host
    slurp:
      src: "{{ item.path }}"
    register: certs_content
    loop: "{{ certs.files }}"
    delegate_to: reg_host
    run_once: true
    no_log: true

  - name: Detect OS
    shell: 
      cmd: '. /etc/os-release; echo $ID'
      executable: /bin/bash
    register: os

  - name: Install cert
    include_tasks:
      file: "install-{{ (os.stdout in ['debian','ubuntu']) | ternary('debian', 'centos') }}.yaml"

- block:

  - name: add cluster proxy list to no-proxy
    blockinfile:
      path: /etc/environment
      marker: "# {mark} WSF Setup"
      state: absent

  - name: proxy
    shell:
      cmd: |
        . /etc/environment > /dev/null
        echo "$http_proxy|$https_proxy|$no_proxy|"
      executable: /bin/bash
    register: proxies

  - name: overwrite with dev setup
    blockinfile:
      path: /etc/environment
      marker: "# {mark} WSF Dev Setup"
      block: |
        http_proxy="{{ 0 | extract(proxies.stdout | split('|')) }}"
        https_proxy="{{ 1 | extract(proxies.stdout | split('|')) }}"
        no_proxy="{{ 2 | extract(proxies.stdout | split('|')) | split(',') | union([dev_cert_host]) | join(',') }}"

  - name: Add proxy
    include_role:
      name: containerd
      tasks_from: proxy

  - name: restart containerd
    systemd:
      name: containerd
      state: restarted
      daemon_reload: true
    ignore_errors: true
    no_log: true

  - name: sleep a while
    command: sleep 20s

  - name: Add proxy
    include_role:
      name: docker
      tasks_from: proxy

  - name: restart docker
    systemd:
      name: docker
      state: restarted
      daemon_reload: true
    ignore_errors: true
    no_log: true

  - name: restart kubelet
    systemd:
      name: kubelet
      state: restarted
    ignore_errors: true
    no_log: true

