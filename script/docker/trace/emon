#!/bin/bash -e

emon_bin_path="/usr/local/emon"
emon_sep_vars="$emon_bin_path/sep/sep_vars.sh"
emon_pyedp_options="--socket-view --core-view --thread-view"

extract_emon_options () {
    if [[ "$@" = *"--emon_options="* ]]; then
        local options="$@"
        options="${options/*--emon_options=/}"
        options="${options/ */}"
        options="${options/edp_file=/"edp_file=$LOGSDIRH/"}"
        echo "${options//%20/ }"
    fi
}

emon_options="$(extract_emon_options $DOCKER_CMAKE_OPTIONS $CTESTSH_OPTIONS)"

emon_start () {
    if [ -e "$emon_sep_vars" ]; then
        mkdir -p "$1-emon"
        cd "$1-emon"
        if is_roi sar $2 ${1##*-} TRACE_START; then
        (
            . "$emon_sep_vars" > /dev/null
            emon -collect-edp $emon_options -f "$1-emon/emon-$2.dat" > emon-$2.logs 2>&1 &
            disown
            echo "emon started"
        )
        fi
    fi
}

emon_stop () {
    if [ -e "$emon_sep_vars" ] && [ -d "$1-emon" ]; then
        cd "$1-emon" 
        if is_roi sar $2 ${1##*-} TRACE_STOP; then
        (
            . "$emon_sep_vars" > /dev/null
            emon -stop || true
            chmod a+r emon-$2.dat || true
            echo "emon stopped"
        )
        fi
    fi
}

emon_collect () {
    if [ -e "$emon_sep_vars" ] && [ -d "$1-emon" ]; then
    (
        . "$emon_sep_vars" > /dev/null
        cd "$1-emon"
        for dat in emon-*.dat; do
            [ -r $dat ] || continue
            mkdir -p ${dat/.dat/-edp}
            cd ${/.dat/-edp}
            metric_file="$(head -n200 ../$dat | grep -E '^EDP metric file:' | cut -f2 -d:)"
            chart_file="$(head -n200 ../$dat | grep -E '^EDP chart file:' | cut -f2 -d:)"
            python3 -m pyedp.edp $emon_pyedp_options -i ../$dat -o summary.xlsx -m "$emon_bin_path/sep/config/edp/$(basename "$metric_file")" -f "$emon_bin_path/sep/config/edp/$(basename "$chart_file")" > pyedp.logs 2>&1
        done
    )
    fi
}

