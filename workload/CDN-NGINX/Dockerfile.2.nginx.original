# cdn-nginx-original

#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#
ARG OS_VER=22.04
ARG OS_IMAGE=ubuntu
FROM ${OS_IMAGE}:${OS_VER}

RUN apt-get update && apt-get install -y --no-install-recommends wget git build-essential systemd ca-certificates nasm \
    libpcre3-dev libxml2-dev libxslt1-dev libarchive-dev zlib1g-dev \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

ARG OPENSSL_INCLUDE_DIR="/usr/local/include/openssl"
ARG OPENSSL_CRYPTO_LIBRARY="/usr/local/lib64/libcrypto.so.3"
ARG OPENSSL_LIBRARIES_DIR="/usr/local/lib64"
ARG OPENSSL_ROOT_DIR="/usr/local/bin/openssl"

ARG OPENSSL_VER="3.1.0"
ARG OPENSSL_REPO=https://github.com/openssl/openssl.git
RUN git clone -b openssl-${OPENSSL_VER} --depth 1 ${OPENSSL_REPO} openssl
WORKDIR /openssl
RUN ./Configure --openssldir=/etc/ssl/ && \
    make -j && \
    make install && \
    rm -rf /openssl

RUN mkdir -p /home/cdn/var/www/tmp


ARG NGINX_VER="1.24.0"
ARG NGINX_REPO=https://nginx.org/download/nginx-${NGINX_VER}.tar.gz
WORKDIR /
RUN wget --progress=dot:giga ${NGINX_REPO} && tar xzf nginx-${NGINX_VER}.tar.gz && rm nginx-${NGINX_VER}.tar.gz
WORKDIR /nginx-${NGINX_VER}
RUN ./configure \
      --prefix=/home/cdn/var/www \
      --sbin-path=/home/cdn/sbin/nginx \
      --modules-path=/home/cdn/lib64/nginx/modules \
      --conf-path=/home/cdn/etc/nginx/nginx.conf \
      --error-log-path=/home/cdn/var/www/log/error.log \
      --pid-path=/home/cdn/var/www/nginx.pid \
      --lock-path=/home/cdn/var/www/nginx.lock \
      --http-log-path=/home/cdn/var/www/log/access.log \
      --http-client-body-temp-path=/home/cdn/var/www/tmp/client_body \
      --http-proxy-temp-path=/home/cdn/var/www/tmp/proxy \
      --http-fastcgi-temp-path=/home/cdn/var/www/tmp/fastcgi \
      --http-uwsgi-temp-path=/home/cdn/var/www/tmp/uwsgi \
      --http-scgi-temp-path=/home/cdn/var/www/tmp/scgi \
      --user=nobody \
      --group=nobody \
      --with-select_module \
      --with-poll_module \
      --with-threads \
      --with-file-aio \
      --with-http_ssl_module \
      --with-http_v2_module \
      --with-http_realip_module \
      --with-http_addition_module \
      --with-http_xslt_module \
      --with-http_sub_module \
      --with-http_dav_module \
      --with-http_flv_module \
      --with-http_mp4_module \
      --with-http_gunzip_module \
      --with-http_gzip_static_module \
      --with-http_auth_request_module \
      --with-http_random_index_module \
      --with-http_secure_link_module \
      --with-http_degradation_module \
      --with-http_slice_module \
      --with-http_stub_status_module \
      --with-stream \
      --with-stream_ssl_module \
      --with-stream_realip_module \
      --with-stream_ssl_preread_module \
      --with-pcre \
      --with-cc-opt="-O3 -I/usr/local/include/openssl \
	      -Wno-error=deprecated-declarations -Wimplicit-fallthrough=0" \
      --with-ld-opt="-Wl,-rpath=/usr/local/lib64 -L/usr/local/lib64" && \
    make -j && \
    make install && \
    rm -rf /nginx-${NGINX_VER}


ENV OPENSSL_ENGINES=/usr/local/lib64/engines-3
RUN ldconfig

COPY conf/nginx-origin.conf  /home/cdn/etc/nginx/
COPY conf/nginx-http.conf  /home/cdn/etc/nginx/
COPY conf/nginx-https.conf  /home/cdn/etc/nginx/

WORKDIR /
COPY /script/prepare_nginx.sh /
RUN mkfifo /export-logs
CMD (ldconfig && /prepare_nginx.sh; echo $? > status) 2>&1 | tee output.logs && \
    tar cf /export-logs status output.logs && \
    sleep infinity